(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[12,11],{"0Ms9":function(n,a,s){"use strict";s.r(a);var t=s("k1fw"),e=s("tJVT"),p=s("q1tI"),o=s.n(p),c=s("d3U/"),u=()=>{var n=Object(p["useState"])({count:0}),a=Object(e["a"])(n,2),s=a[0],u=a[1];return Object(c["a"])(()=>(console.log("mount"),()=>{console.log("unmount")}),[s]),o.a.createElement("div",null,o.a.createElement("button",{onClick:()=>u(n=>({count:n.count+1}))},"change deps"),o.a.createElement("button",{onClick:()=>u(n=>Object(t["a"])({},n))},"change to same"))};a["default"]=u},"0Owb":function(n,a,s){"use strict";function t(){return t=Object.assign||function(n){for(var a=1;a<arguments.length;a++){var s=arguments[a];for(var t in s)Object.prototype.hasOwnProperty.call(s,t)&&(n[t]=s[t])}return n},t.apply(this,arguments)}s.d(a,"a",(function(){return t}))},ESc7:function(n,a,s){"use strict";s.r(a);var t=s("0Owb"),e=s("q1tI"),p=s.n(e),o=(s("B2uJ"),s("5Yjd")),c=s.n(o),u=p.a.memo((function(){var n=t(s("q1tI")),a=t(s("0Ms9"));function t(n){return n&&n.__esModule?n:{default:n}}var e=function(){return n["default"].createElement(a["default"],null)};return n["default"].createElement(e)}));a["default"]=function(){return p.a.createElement(p.a.Fragment,null,p.a.createElement("div",{className:"markdown"},p.a.createElement("h1",{id:"useeffectequal"},p.a.createElement("a",{"aria-hidden":"true",href:"#useeffectequal"},p.a.createElement("span",{className:"icon icon-link"})),"useEffectEqual"),p.a.createElement("p",null,"\u652f\u6301\u5bf9 deps \u8fdb\u884c\u6df1\u5ea6\u5bf9\u6bd4\u7684",p.a.createElement("code",null,"useEffect")),p.a.createElement("p",null,"\ud83d\udca1 \u4fdd\u6301 deps \u503c\u7ed3\u6784\u76f8\u5bf9\u7b80\u5355\u80fd\u591f\u51cf\u5c11\u5bf9\u6bd4\u6df1\u5ea6\uff0c\u4ece\u800c\u63d0\u9ad8\u6027\u80fd"),p.a.createElement("h2",{id:"\u793a\u4f8b"},p.a.createElement("a",{"aria-hidden":"true",href:"#\u793a\u4f8b"},p.a.createElement("span",{className:"icon icon-link"})),"\u793a\u4f8b")),p.a.createElement(c.a,Object(t["a"])({source:{raw:"import React, { useState } from 'react';\r\nimport { useEffectEqual } from './useEffectEqual';\r\n\r\nconst useEffectWithEqualDemo = () => {\r\n  const [state, set] = useState({ count: 0 });\r\n\r\n  useEffectEqual(() => {\r\n    console.log('mount');\r\n\r\n    return () => {\r\n      console.log('unmount');\r\n    };\r\n  }, [state]);\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => set(prev => ({ count: prev.count + 1 }))}>\r\n        change deps\r\n      </button>\r\n      <button onClick={() => set(prev => ({ ...prev }))}>change to same</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default useEffectWithEqualDemo;\r\n",jsx:'<pre class="language-jsx"><code class="language-jsx"><span class="token keyword module">import</span> <span class="token maybe-class-name">React</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\r\n<span class="token keyword module">import</span> <span class="token punctuation">{</span> useEffectEqual <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'./useEffectEqual\'</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">const</span> <span class="token function-variable function">useEffectWithEqualDemo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\r\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> <span class="token keyword">set</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\r\n    count<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\r\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n  <span class="token function">useEffectEqual</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\r\n    <span class="token console class-name">console</span><span class="token punctuation">.</span><span class="token method function property-access">log</span><span class="token punctuation">(</span><span class="token string">\'mount\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\r\n      <span class="token console class-name">console</span><span class="token punctuation">.</span><span class="token method function property-access">log</span><span class="token punctuation">(</span><span class="token string">\'unmount\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>state<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\r\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>button</span>\r\n        <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span>\r\n          <span class="token keyword">set</span><span class="token punctuation">(</span><span class="token parameter">prev</span> <span class="token arrow operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\r\n            count<span class="token punctuation">:</span> prev<span class="token punctuation">.</span><span class="token property-access">count</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>\r\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\r\n        <span class="token punctuation">}</span></span>\r\n      <span class="token punctuation">></span></span><span class="token plain-text">\r\n        change deps\r\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>button</span><span class="token punctuation">></span></span><span class="token plain-text">\r\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token keyword">set</span><span class="token punctuation">(</span><span class="token parameter">prev</span> <span class="token arrow operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token spread operator">...</span>prev <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">change to same</span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>button</span><span class="token punctuation">></span></span><span class="token plain-text">\r\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>\r\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword module">export</span> <span class="token keyword module">default</span> useEffectWithEqualDemo<span class="token punctuation">;</span>\r\n\n</code></pre>',tsx:'<pre class="language-tsx"><code class="language-tsx"><span class="token keyword">import</span> <span class="token maybe-class-name">React</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\r\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useEffectEqual <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./useEffectEqual\'</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">const</span> <span class="token function-variable function">useEffectWithEqualDemo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\r\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> <span class="token keyword">set</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> count<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n  <span class="token function">useEffectEqual</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\r\n    <span class="token console class-name">console</span><span class="token punctuation">.</span><span class="token method function property-access">log</span><span class="token punctuation">(</span><span class="token string">\'mount\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\r\n      <span class="token console class-name">console</span><span class="token punctuation">.</span><span class="token method function property-access">log</span><span class="token punctuation">(</span><span class="token string">\'unmount\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>state<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\r\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token keyword">set</span><span class="token punctuation">(</span><span class="token parameter">prev</span> <span class="token arrow operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span> count<span class="token punctuation">:</span> prev<span class="token punctuation">.</span><span class="token property-access">count</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\r\n        change deps\r\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>button</span><span class="token punctuation">></span></span><span class="token plain-text">\r\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token keyword">set</span><span class="token punctuation">(</span><span class="token parameter">prev</span> <span class="token arrow operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token spread operator">...</span>prev <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">change to same</span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>button</span><span class="token punctuation">></span></span><span class="token plain-text">\r\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>\r\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">export</span> <span class="token keyword">default</span> useEffectWithEqualDemo<span class="token punctuation">;</span>\r\n\n</code></pre>'}},{path:"/_demos/use-effect-equal.demo",dependencies:{}}),p.a.createElement(u,null)),p.a.createElement("div",{className:"markdown"},p.a.createElement("h2",{id:"api"},p.a.createElement("a",{"aria-hidden":"true",href:"#api"},p.a.createElement("span",{className:"icon icon-link"})),"API"),p.a.createElement("pre",{className:"language-ts"},p.a.createElement("code",{className:"language-ts"},p.a.createElement("span",{className:"token keyword"},"function")," ",p.a.createElement("span",{className:"token function"},"useEffectEqual"),p.a.createElement("span",{className:"token punctuation"},"("),p.a.createElement("br",null),"  ",p.a.createElement("span",{className:"token parameter"},"effect",p.a.createElement("span",{className:"token punctuation"},":")," ",p.a.createElement("span",{className:"token maybe-class-name"},"React"),p.a.createElement("span",{className:"token punctuation"},"."),p.a.createElement("span",{className:"token property-access"},p.a.createElement("span",{className:"token maybe-class-name"},"EffectCallback")),p.a.createElement("span",{className:"token punctuation"},","),p.a.createElement("br",null),"  deps",p.a.createElement("span",{className:"token operator"},"?"),p.a.createElement("span",{className:"token punctuation"},":")," ",p.a.createElement("span",{className:"token builtin"},"any"),p.a.createElement("span",{className:"token punctuation"},"["),p.a.createElement("span",{className:"token punctuation"},"]"),p.a.createElement("span",{className:"token punctuation"},","),p.a.createElement("br",null),"  customizer",p.a.createElement("span",{className:"token operator"},"?"),p.a.createElement("span",{className:"token punctuation"},":")," ",p.a.createElement("span",{className:"token maybe-class-name"},"IsEqualCustomizer")),p.a.createElement("br",null),p.a.createElement("span",{className:"token punctuation"},")"),p.a.createElement("span",{className:"token punctuation"},";"),p.a.createElement("br",null))),p.a.createElement("p",null,p.a.createElement("strong",null,"effect")," - \u540c useEffect \u53c2\u6570 1"),p.a.createElement("p",null,p.a.createElement("strong",null,"deps")," - \u4f9d\u8d56\u6570\u7ec4\uff0c\u7528\u6cd5\u4e0e useEffect \u4e00\u81f4\uff0c\u4f46\u662f\u4f1a\u5bf9 dep \u9879\u6267\u884c\u6df1\u5bf9\u6bd4, \u6240\u4ee5\u652f\u6301\u4f20\u5165\u5bf9\u8c61\u7b49\u590d\u6742\u7ed3\u6784"),p.a.createElement("p",null,p.a.createElement("strong",null,"customizer")," - \u53ef\u4ee5\u901a\u8fc7\u6b64\u51fd\u6570\u81ea\u5b9a\u4e49\u5bf9\u6bd4\u65b9\u5f0f, \u5982\u679c\u76f8\u7b49\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false, \u8fd4\u56de undefined \u65f6\u4f7f\u7528\u9ed8\u8ba4\u5bf9\u6bd4\u65b9\u5f0f")))}},"d3U/":function(n,a,s){"use strict";s.d(a,"a",(function(){return c}));var t=s("q1tI"),e=s("tLXD"),p=s("tq0P"),o=s.n(p);function c(n,a,s){var p=Object(e["a"])(a),c=Object(t["useRef"])(0),u=o()(a,p,s);u||c.current++,Object(t["useEffect"])(n,[c.current])}},tLXD:function(n,a,s){"use strict";var t=s("q1tI"),e=function(n){var a=Object(t["useRef"])();return Object(t["useEffect"])((function(){a.current=n})),a.current};a["a"]=e}}]);