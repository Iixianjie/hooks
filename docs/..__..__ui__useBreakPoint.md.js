(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[36,35],{"+2zB":function(n,a,s){"use strict";s.r(a);var e=s("0Owb"),t=s("q1tI"),p=s.n(t),o=(s("B2uJ"),s("5Yjd")),c=s.n(o),l=p.a.memo((function(){var n=e(s("q1tI")),a=e(s("DmY2"));function e(n){return n&&n.__esModule?n:{default:n}}var t=function(){return n["default"].createElement(a["default"],null)};return n["default"].createElement(t)}));a["default"]=function(){return p.a.createElement(p.a.Fragment,null,p.a.createElement("div",{className:"markdown"},p.a.createElement("h1",{id:"usebreakpoint"},p.a.createElement("a",{"aria-hidden":"true",href:"#usebreakpoint"},p.a.createElement("span",{className:"icon icon-link"})),"useBreakPoint"),p.a.createElement("p",null,"\u57fa\u4e8e",p.a.createElement("a",{href:"https://hooks.umijs.org/hooks/dom/use-responsive",target:"_blank"},"@umijs/hooks use-responsive",p.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg","aria-hidden":!0,x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15",className:"__dumi-default-external-link-icon"},p.a.createElement("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),p.a.createElement("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}))),", \u901a\u8fc7\u5185\u7f6e\u7684\u4e00\u7ec4\u65ad\u70b9\u6765\u83b7\u53d6\u54cd\u5e94\u5f0f\u4fe1\u606f"),p.a.createElement("h2",{id:"\u793a\u4f8b"},p.a.createElement("a",{"aria-hidden":"true",href:"#\u793a\u4f8b"},p.a.createElement("span",{className:"icon icon-link"})),"\u793a\u4f8b")),p.a.createElement(c.a,Object(e["a"])({source:{raw:"import React from 'react';\r\nimport { useBreakPoint } from './useBreakPoint';\r\n\r\nconst useBreakPointDemo = () => {\r\n  const bp = useBreakPoint();\r\n\r\n  console.log(bp);\r\n\r\n  return (\r\n    <div>\r\n      <div>useBreakPoint</div>\r\n      <div>{JSON.stringify(bp)}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default useBreakPointDemo;\r\n",jsx:'<pre class="language-jsx"><code class="language-jsx"><span class="token keyword module">import</span> <span class="token maybe-class-name">React</span> <span class="token keyword module">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\r\n<span class="token keyword module">import</span> <span class="token punctuation">{</span> useBreakPoint <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'./useBreakPoint\'</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">const</span> <span class="token function-variable function">useBreakPointDemo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\r\n  <span class="token keyword">const</span> bp <span class="token operator">=</span> <span class="token function">useBreakPoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n  <span class="token console class-name">console</span><span class="token punctuation">.</span><span class="token method function property-access">log</span><span class="token punctuation">(</span>bp<span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\r\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">useBreakPoint</span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\r\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">{</span><span class="token known-class-name class-name">JSON</span><span class="token punctuation">.</span><span class="token method function property-access">stringify</span><span class="token punctuation">(</span>bp<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\r\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>\r\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword module">export</span> <span class="token keyword module">default</span> useBreakPointDemo<span class="token punctuation">;</span>\r\n\n</code></pre>',tsx:'<pre class="language-tsx"><code class="language-tsx"><span class="token keyword">import</span> <span class="token maybe-class-name">React</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\r\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useBreakPoint <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./useBreakPoint\'</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">const</span> <span class="token function-variable function">useBreakPointDemo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\r\n  <span class="token keyword">const</span> bp <span class="token operator">=</span> <span class="token function">useBreakPoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n  <span class="token console class-name">console</span><span class="token punctuation">.</span><span class="token method function property-access">log</span><span class="token punctuation">(</span>bp<span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\r\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\r\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">useBreakPoint</span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\r\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">{</span><span class="token known-class-name class-name">JSON</span><span class="token punctuation">.</span><span class="token method function property-access">stringify</span><span class="token punctuation">(</span>bp<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\r\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>\r\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">export</span> <span class="token keyword">default</span> useBreakPointDemo<span class="token punctuation">;</span>\r\n\n</code></pre>'}},{path:"/_demos/use-break-point.demo",dependencies:{}}),p.a.createElement(l,null)),p.a.createElement("div",{className:"markdown"},p.a.createElement("h2",{id:"api"},p.a.createElement("a",{"aria-hidden":"true",href:"#api"},p.a.createElement("span",{className:"icon icon-link"})),"API"),p.a.createElement("p",null,p.a.createElement("code",null,"const bp = useBreakPoint()")),p.a.createElement("p",null,p.a.createElement("strong",null,"bp")),p.a.createElement("pre",{className:"language-ts"},p.a.createElement("code",{className:"language-ts"},p.a.createElement("span",{className:"token punctuation"},"{"),p.a.createElement("br",null),"  ",p.a.createElement("span",{className:"token string"},'"xs"'),p.a.createElement("span",{className:"token punctuation"},":")," ",p.a.createElement("span",{className:"token builtin"},"boolean"),p.a.createElement("span",{className:"token punctuation"},";"),p.a.createElement("br",null),"  ",p.a.createElement("span",{className:"token string"},'"sm"'),p.a.createElement("span",{className:"token punctuation"},":")," ",p.a.createElement("span",{className:"token builtin"},"boolean"),p.a.createElement("span",{className:"token punctuation"},";"),p.a.createElement("br",null),"  ",p.a.createElement("span",{className:"token string"},'"md"'),p.a.createElement("span",{className:"token punctuation"},":")," ",p.a.createElement("span",{className:"token builtin"},"boolean"),p.a.createElement("span",{className:"token punctuation"},";"),p.a.createElement("br",null),"  ",p.a.createElement("span",{className:"token string"},'"lg"'),p.a.createElement("span",{className:"token punctuation"},":")," ",p.a.createElement("span",{className:"token builtin"},"boolean"),p.a.createElement("span",{className:"token punctuation"},";"),p.a.createElement("br",null),"  ",p.a.createElement("span",{className:"token string"},'"xl"'),p.a.createElement("span",{className:"token punctuation"},":")," ",p.a.createElement("span",{className:"token builtin"},"boolean"),p.a.createElement("span",{className:"token punctuation"},";"),p.a.createElement("br",null),"  ",p.a.createElement("span",{className:"token string"},'"xxl"'),p.a.createElement("span",{className:"token punctuation"},":")," ",p.a.createElement("span",{className:"token builtin"},"boolean"),p.a.createElement("span",{className:"token punctuation"},";"),p.a.createElement("br",null),p.a.createElement("span",{className:"token punctuation"},"}"),p.a.createElement("br",null)))))}},"0Owb":function(n,a,s){"use strict";function e(){return e=Object.assign||function(n){for(var a=1;a<arguments.length;a++){var s=arguments[a];for(var e in s)Object.prototype.hasOwnProperty.call(s,e)&&(n[e]=s[e])}return n},e.apply(this,arguments)}s.d(a,"a",(function(){return e}))},DmY2:function(n,a,s){"use strict";s.r(a);var e=s("q1tI"),t=s.n(e),p=s("n+Aq");Object(p["a"])({xs:0,sm:576,md:768,lg:992,xl:1200,xxl:1600});var o=()=>{var n=Object(p["b"])();return console.log(n),t.a.createElement("div",null,t.a.createElement("div",null,"useBreakPoint"),t.a.createElement("div",null,JSON.stringify(n)))};a["default"]=o}}]);